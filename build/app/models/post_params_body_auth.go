// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostParamsBodyAuth post params body auth
//
// swagger:model postParamsBodyAuth
type PostParamsBodyAuth struct {

	// The secret created under "Certificates & Secrets"
	// Example: S0m3~Cr8zy~P855word
	// Required: true
	Password *string `json:"password"`

	// Azure tenant ID
	// Example: a433dd122-bcdf-1605-160b-09717b123456
	// Required: true
	Tenant *string `json:"tenant"`

	// The application ID of the app registration for the principal
	// Example: a433dd122-bcdf-1605-160b-09717b123456
	// Required: true
	User *string `json:"user"`
}

// Validate validates this post params body auth
func (m *PostParamsBodyAuth) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePassword(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenant(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostParamsBodyAuth) validatePassword(formats strfmt.Registry) error {

	if err := validate.Required("password", "body", m.Password); err != nil {
		return err
	}

	return nil
}

func (m *PostParamsBodyAuth) validateTenant(formats strfmt.Registry) error {

	if err := validate.Required("tenant", "body", m.Tenant); err != nil {
		return err
	}

	return nil
}

func (m *PostParamsBodyAuth) validateUser(formats strfmt.Registry) error {

	if err := validate.Required("user", "body", m.User); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post params body auth based on context it is used
func (m *PostParamsBodyAuth) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PostParamsBodyAuth) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostParamsBodyAuth) UnmarshalBinary(b []byte) error {
	var res PostParamsBodyAuth
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
