// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Run Microsoft's Azure CLI in Direktiv.",
    "title": "azure",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "cloud",
        "build"
      ],
      "container": "direktiv.azurecr.io/functions/azure",
      "issues": "https://github.com/direktiv-apps/azure/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This function provides Azure's cli. The supported authentication mechanism is via service principal.  This requires user and tenant ID and a secret. How to create a service principal for Azure is explained  [Microsoft's Documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-create-service-principal-portal). If extensions are needed they are downloaded automatically and the following extensions are already pre-installed:\n- ssh\n- containerapp\n- k8s-configuration\n- k8s-extension\n- k8sconfiguration\n- connectedk8s\n- connectedmachine\n- connectedvmware\n\nThe output is set to JSON via the environment variable AZURE_CORE_OUTPUT but can be overwritten with '--output'. If commands a long running Azure cli presents a \"progress bar\" in stdout. In this case the response is not JSON because  strings printed intogcr.io/direktiv/apps",
      "maintainer": "[direktiv.io](https://www.direktiv.io) ",
      "url": "https://github.com/direktiv-apps/azure"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "default": "development",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "default": "/tmp",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "auth"
              ],
              "properties": {
                "auth": {
                  "type": "object",
                  "required": [
                    "user",
                    "password",
                    "tenant"
                  ],
                  "properties": {
                    "password": {
                      "description": "The secret created under \"Certificates \u0026 Secrets\"",
                      "type": "string",
                      "example": "S0m3~Cr8zy~P855word"
                    },
                    "tenant": {
                      "description": "Azure tenant ID",
                      "type": "string",
                      "example": "a433dd122-bcdf-1605-160b-09717b123456"
                    },
                    "user": {
                      "description": "The application ID of the app registration for the principal",
                      "type": "string",
                      "example": "a433dd122-bcdf-1605-160b-09717b123456"
                    }
                  }
                },
                "commands": {
                  "description": "Array of commands.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command to run",
                        "type": "string",
                        "example": "az vm list"
                      },
                      "continue": {
                        "description": "Stops excecution if command fails, otherwise proceeds with next command",
                        "type": "boolean"
                      },
                      "print": {
                        "description": "If set to false the command will not print the full command with arguments to logs.",
                        "type": "boolean",
                        "default": true
                      },
                      "silent": {
                        "description": "If set to false the command will not print output to logs.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                },
                "files": {
                  "description": "File to create before running commands.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/direktivFile"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of executed commands.",
            "schema": {
              "type": "object",
              "properties": {
                "azure": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "success",
                      "result"
                    ],
                    "properties": {
                      "result": {
                        "additionalProperties": false
                      },
                      "success": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "azure": [
                {
                  "result": [
                    {
                      "additionalCapabilities": null,
                      "applicationProfile": null,
                      "availabilitySet": null,
                      "billingProfile": null,
                      "capacityReservation": null,
                      "diagnosticsProfile": {
                        "bootDiagnostics": {
                          "enabled": false,
                          "storageUri": null
                        }
                      }
                    }
                  ],
                  "success": true
                }
              ]
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "echo login in to azure"
            },
            {
              "action": "exec",
              "continue": false,
              "exec": "az login --service-principal -u={{ .Auth.User }} -p={{ .Auth.Password }} --tenant={{ .Auth.Tenant }}",
              "print": false,
              "silent": true
            },
            {
              "action": "foreach",
              "continue": "{{ .Item.Continue }}",
              "exec": "{{ .Item.Command }}",
              "loop": ".Commands",
              "print": "{{ .Item.Print }}",
              "silent": "{{ .Item.Silent }}"
            }
          ],
          "output": "{\n  \"azure\": {{ index . 2 | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: azure\n  type: action\n  action:\n    function: azure\n    secrets: [\"azureUser\", \"azurePassword\", \"azureTenantID\"]\n    input: \n      auth:\n        user: jq(.secrets.azureUser)\n        password: jq(.secrets.azurePassword)\n        tenant: jq(.secrets.azureTenantID)\n      commands:\n      - command: az vm list",
            "title": "Basic"
          }
        ],
        "x-direktiv-function": "functions:\n- id: azure\n  image: direktiv.azurecr.io/functions/azure:1.0\n  type: knative-workflow",
        "x-direktiv-secrets": [
          {
            "description": "User ID of the app for the service",
            "name": "azureUser"
          },
          {
            "description": "The password is the token generated in \"Certificates \u0026 secrets\" in \"App registrations\". The app needs to have a role assigned in the subscription to work. ",
            "name": "azurePassword"
          },
          {
            "description": "Tenant ID provided by Azure.",
            "name": "azureTenantID"
          }
        ]
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Run Microsoft's Azure CLI in Direktiv.",
    "title": "azure",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "cloud",
        "build"
      ],
      "container": "direktiv.azurecr.io/functions/azure",
      "issues": "https://github.com/direktiv-apps/azure/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This function provides Azure's cli. The supported authentication mechanism is via service principal.  This requires user and tenant ID and a secret. How to create a service principal for Azure is explained  [Microsoft's Documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-create-service-principal-portal). If extensions are needed they are downloaded automatically and the following extensions are already pre-installed:\n- ssh\n- containerapp\n- k8s-configuration\n- k8s-extension\n- k8sconfiguration\n- connectedk8s\n- connectedmachine\n- connectedvmware\n\nThe output is set to JSON via the environment variable AZURE_CORE_OUTPUT but can be overwritten with '--output'. If commands a long running Azure cli presents a \"progress bar\" in stdout. In this case the response is not JSON because  strings printed intogcr.io/direktiv/apps",
      "maintainer": "[direktiv.io](https://www.direktiv.io) ",
      "url": "https://github.com/direktiv-apps/azure"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "default": "development",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "default": "/tmp",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/postParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of executed commands.",
            "schema": {
              "$ref": "#/definitions/postOKBody"
            },
            "examples": {
              "azure": [
                {
                  "result": [
                    {
                      "additionalCapabilities": null,
                      "applicationProfile": null,
                      "availabilitySet": null,
                      "billingProfile": null,
                      "capacityReservation": null,
                      "diagnosticsProfile": {
                        "bootDiagnostics": {
                          "enabled": false,
                          "storageUri": null
                        }
                      }
                    }
                  ],
                  "success": true
                }
              ]
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "echo login in to azure"
            },
            {
              "action": "exec",
              "continue": false,
              "exec": "az login --service-principal -u={{ .Auth.User }} -p={{ .Auth.Password }} --tenant={{ .Auth.Tenant }}",
              "print": false,
              "silent": true
            },
            {
              "action": "foreach",
              "continue": "{{ .Item.Continue }}",
              "exec": "{{ .Item.Command }}",
              "loop": ".Commands",
              "print": "{{ .Item.Print }}",
              "silent": "{{ .Item.Silent }}"
            }
          ],
          "output": "{\n  \"azure\": {{ index . 2 | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: azure\n  type: action\n  action:\n    function: azure\n    secrets: [\"azureUser\", \"azurePassword\", \"azureTenantID\"]\n    input: \n      auth:\n        user: jq(.secrets.azureUser)\n        password: jq(.secrets.azurePassword)\n        tenant: jq(.secrets.azureTenantID)\n      commands:\n      - command: az vm list",
            "title": "Basic"
          }
        ],
        "x-direktiv-function": "functions:\n- id: azure\n  image: direktiv.azurecr.io/functions/azure:1.0\n  type: knative-workflow",
        "x-direktiv-secrets": [
          {
            "description": "User ID of the app for the service",
            "name": "azureUser"
          },
          {
            "description": "The password is the token generated in \"Certificates \u0026 secrets\" in \"App registrations\". The app needs to have a role assigned in the subscription to work. ",
            "name": "azurePassword"
          },
          {
            "description": "Tenant ID provided by Azure.",
            "name": "azureTenantID"
          }
        ]
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "postOKBody": {
      "type": "object",
      "properties": {
        "azure": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postOKBodyAzureItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "postOKBodyAzureItems": {
      "type": "object",
      "required": [
        "success",
        "result"
      ],
      "properties": {
        "result": {
          "additionalProperties": false
        },
        "success": {
          "type": "boolean"
        }
      },
      "x-go-gen-location": "operations"
    },
    "postParamsBody": {
      "type": "object",
      "required": [
        "auth"
      ],
      "properties": {
        "auth": {
          "$ref": "#/definitions/postParamsBodyAuth"
        },
        "commands": {
          "description": "Array of commands.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/postParamsBodyCommandsItems"
          }
        },
        "files": {
          "description": "File to create before running commands.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/direktivFile"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "postParamsBodyAuth": {
      "type": "object",
      "required": [
        "user",
        "password",
        "tenant"
      ],
      "properties": {
        "password": {
          "description": "The secret created under \"Certificates \u0026 Secrets\"",
          "type": "string",
          "example": "S0m3~Cr8zy~P855word"
        },
        "tenant": {
          "description": "Azure tenant ID",
          "type": "string",
          "example": "a433dd122-bcdf-1605-160b-09717b123456"
        },
        "user": {
          "description": "The application ID of the app registration for the principal",
          "type": "string",
          "example": "a433dd122-bcdf-1605-160b-09717b123456"
        }
      },
      "x-go-gen-location": "operations"
    },
    "postParamsBodyCommandsItems": {
      "type": "object",
      "properties": {
        "command": {
          "description": "Command to run",
          "type": "string",
          "example": "az vm list"
        },
        "continue": {
          "description": "Stops excecution if command fails, otherwise proceeds with next command",
          "type": "boolean"
        },
        "print": {
          "description": "If set to false the command will not print the full command with arguments to logs.",
          "type": "boolean",
          "default": true
        },
        "silent": {
          "description": "If set to false the command will not print output to logs.",
          "type": "boolean",
          "default": false
        }
      },
      "x-go-gen-location": "operations"
    }
  }
}`))
}
